{"version":3,"sources":["DigitalClock.js","CountdownTimer.js","Weather.js","Calculator4.js","ToDo.js","MindReader2.js","Layout.js","App.js","serviceWorker.js","index.js","background-1.jpg"],"names":["DigitalClock","useState","Date","time","setTime","useEffect","clock","setInterval","clearInterval","className","toLocaleTimeString","hour","minute","CountdownTimer","target","days","hrs","min","sec","mil","countdown","setCountdown","done","setDone","h","m","addZeros","x","timer","totalM","valueOf","now","Math","floor","hours","milli","Weather","weather","setWeather","location","setLocation","success","pos","lat","coords","latitude","long","longitude","fetch","then","res","json","result","name","main","temp","toFixed","src","icon","alt","type","id","onClick","navigator","geolocation","getCurrentPosition","Calculator4","props","calcBtns","state","num1","num2","operand","equalTemp","undefined","eqPress","display","userClick","bind","numPress","keyPress","mathCalc","multiCalc","equalCalc","clear","e","val","innerHTML","this","inputNum","setState","length","result1","result2","inputKey","Infinity","includes","key","plus","Number","minus","div","mult","console","log","localTemp","map","idx","disabled","React","Component","ToDo","view","useRef","list","listHTML","setListHTML","input","inputRef","createRef","ListObj","title","current","document","getElementById","checked","nextSibling","localStorage","i","JSON","parse","window","todoList","parsedJSON","push","addToList","addEventListener","keyCode","trim","setItem","stringify","value","listStyle","wordBreak","onChange","strike","style","htmlFor","nextElementSibling","changeView","ref","el","width","placeholder","onMouseEnter","doneNum","notDoneNum","onMouseLeave","role","aria-label","anyChecked","click","toggleAll","tempList","deleteItems","MindReader2","text","setText","inst","setInst","nextReveal","setNextReveal","goReset","setGoReset","pageNum","finalAns","renderPage","output","num","sym","symChar","rand","random","splice","symbols","maxHeight","fontSize","overflow","Layout","sectionStyle","backgroundImage","background","backgroundSize","borderRadius","backgroundRepeat","height","borderWidth","borderStyle","App","Boolean","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ea9d8049.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction DigitalClock() {\n    const [time, setTime] = useState(new Date());\n    const settings = { hour: 'numeric', minute: '2-digit' };\n\n    useEffect(() => {\n        const clock = setInterval(\n            () => setTime(new Date()), 1000\n        );\n\n        return function cleanup() {\n            clearInterval(clock);\n        }\n    });\n\n    return (\n        <h1 className='clockFont text-white'>{time.toLocaleTimeString([], settings)}</h1>\n    );\n}\n\nexport default DigitalClock;\n","import React, { useState, useEffect } from 'react';\n\nfunction CountdownTimer() {\n    const [target] = useState(new Date(2021, 2, 21, 0, 0));\n    const [countdown, setCountdown] = useState({\n        days: null,\n        hrs: null,\n        min: null,\n        sec: null,\n        mil: null,\n    });\n    const [done, setDone] = useState(false);\n\n    const m = 1000 * 60;\n    const h = m * 60;\n    const d = h * 24;\n\n    function addZeros(x) {\n        x = x < 10 ? `0${x}` : x;\n        return x;\n    }\n\n    useEffect(() => {\n        const timer = setInterval(\n            () => {\n                var totalM = target.valueOf() - Date.now();\n                var days = Math.floor(totalM / d);\n                totalM -= days * d;\n                var hours = Math.floor(totalM / h);\n                totalM -= hours * h;\n                var min = Math.floor(totalM / m);\n                totalM -= min * m;\n                var sec = Math.floor(totalM / 1000);\n                totalM -= sec * 1000;\n                var milli = Math.floor(totalM / 100);\n                if (days === 0 && hours === 0 && min === 0 && sec === 0 && milli === 0) {\n                    setDone(true);\n                    clearInterval(timer);\n                }\n                setCountdown({\n                    days: days,\n                    hrs: hours,\n                    min: min,\n                    sec: sec,\n                    mil: milli,\n                });\n            }, 100\n        );\n\n        return function cleanup() {\n            clearInterval(timer);\n        }\n    });\n\n    return (\n        <>\n            <div className='container bg-warning rounded'>\n                <div className='row'>\n                    {!done ?\n                        <>\n                            <h1 className='clockFont'>{\n                                countdown.days + ' days ' +\n                                addZeros(countdown.hrs) + ':' +\n                                addZeros(countdown.min) + ':' +\n                                addZeros(countdown.sec) + '.' +\n                                countdown.mil}\n                            </h1>\n                            <p className='mx-auto'>until my birthday</p>\n                        </> :\n                        <h1 className='mx-auto'>Happy Birthday!</h1>\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default CountdownTimer;\n","import React, { useState, useEffect } from 'react';\n\nfunction Weather() {\n    const [weather, setWeather] = useState();\n    const [location, setLocation] = useState();\n\n    const api = '3304f27423b1698d8944ae09a12b24d9';\n\n    function success(pos) {\n        setLocation({\n            lat: pos.coords.latitude,\n            long: pos.coords.longitude,\n        });\n    }\n\n    // When state is changed (ie. when location is set) -> getWeather()\n    useEffect(() => {\n        if (location && !weather) {\n            fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${location.lat}&lon=${location.long}&APPID=${api}`)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        setWeather(result);\n                    });\n        }\n    });\n\n    function loadWeather() {\n        navigator.geolocation.getCurrentPosition(success);\n    }\n\n    if (!location) {\n        return (\n            <>\n                <div className='container bg-info rounded'>\n                    <div className='row'>\n                        <button type='button' id='loadWeather' onClick={loadWeather} className='btn bg-primary mx-auto my-4'>Load Local Weather</button>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div className='container bg-info rounded'>\n                    <div className='row'>\n                        <p className='text-white mx-auto'>{weather ? weather.name : 'loading weather...'}</p>\n                    </div>\n                    <div className='row'>\n                        <h1 className='text-white col-9'>{weather ? ((weather.main.temp - 273.15) * (9 / 5) + 32).toFixed(0) + '°' : null}</h1>\n                        {weather ? <img className='col-3' src={'http://openweathermap.org/img/w/' + weather.weather[0].icon + '.png'} alt='Weather Icon' /> : null}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Weather;\n","import React from 'react';\n\nclass Calculator4 extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // Default Values\n            num1: '',\n            num2: '',\n            operand: '',\n            // Values for multiple equal sign press\n            equalTemp: undefined,\n            eqPress: false,\n\n            display: '0',\n        };\n\n        this.userClick = this.userClick.bind(this);\n        this.numPress = this.numPress.bind(this);\n        this.keyPress = this.keyPress.bind(this);\n        this.mathCalc = this.mathCalc.bind(this);\n        this.multiCalc = this.multiCalc.bind(this);\n        this.equalCalc = this.equalCalc.bind(this);\n        this.clear = this.clear.bind(this);\n    }\n\n    calcBtns = ['C', '', '', '/', '7', '8', '9', 'X', '4', '5', '6', '-', '1', '2', '3', '+', '0', '', '.', '='];\n\n    // CALC LOGIC\n    // Differentiates between numbers and symbols\n    userClick(e) {\n        const val = e.target.innerHTML;\n        if (val === 'C' || val === '/' || val === 'X' || val === '-' || val === '+' || val === '=' || val === '.') {\n            this.keyPress(val);\n        } else {\n            this.numPress(val);\n        }\n    }\n\n    // If a number is pressed\n    numPress(inputNum) {\n        // Resets the equal temp number on any number press\n        this.setState({ equalTemp: undefined });\n        // Sets num1\n        if (this.state.operand === '' || this.state.eqPress) {\n            // If equal was just pressed, followed by a number, clears the calc\n            if (this.state.eqPress) {\n                this.setState({\n                    num1: inputNum,\n                    operand: '',\n                    eqPress: false,\n                    display: inputNum,\n                })\n            }\n            // Makes it so you can't enter 00000\n            if (inputNum === '0' && (this.state.num1 === '0' || this.state.num1 === '')) {\n                this.setState({ \n                    num1: '0',\n                    display: '0',\n                });\n                // Caps the input length at 10 digits\n            } else if (this.state.num1.length < 10) {\n                if (this.state.num1 === '0') {\n                    this.setState({ \n                        num1: inputNum,\n                        display: inputNum,\n                     });\n                } else {\n                    var result1 = this.state.num1 + inputNum;\n                    this.setState({\n                        num1: result1,\n                        display: result1,\n                    });\n                }\n            }\n            // Sets num2\n        } else {\n            if (inputNum === '0' && (this.state.num2 === '0' || this.state.num2 === '')) {\n                this.setState({ \n                    num2: '0',\n                    display: '0',\n                });\n            } else if (this.state.num2.length < 10) {\n                if (this.state.num2 === '0') {\n                    this.setState({ \n                        num2: inputNum,\n                        display: inputNum,\n                    });\n                } else {\n                    var result2 = this.state.num2 + inputNum;\n                    this.setState({\n                        num2: result2,\n                        display: result2,\n                    });\n                }\n            }\n        }\n    }\n\n    // If a symbol is pressed\n    keyPress(inputKey) {\n        // If the key is not =, then reset the equal values\n        if (inputKey !== '=') {\n            this.setState({\n                equalTemp: undefined,\n                eqPress: false,\n            });\n        }\n        // Switch cases for various symbols\n        switch (inputKey) {\n            default:\n                if (this.state.num1 !== '') {\n                    if (this.state.num2 === '') {\n                        this.setState({\n                            display: inputKey,\n                            operand: inputKey === 'X' ? '*' : inputKey,\n                        });\n                        break;\n                    } else {\n                        this.multiCalc(this.state.operand);\n                        this.setState({\n                            operand: inputKey === 'X' ? '*' : inputKey,\n                        });\n                        break;\n                    }\n                }\n                break;\n            case '=':\n                // If either input is '.' --> display 'Illegal use of decimal'\n                if (this.state.num1 === '.' || this.state.num2 === '.') {\n                    this.clear();\n                    this.setState({ display: 'error:decimal use' });\n                    break;\n                }\n                if (this.state.num1 === Infinity || this.state.num1 === -Infinity) {\n                    this.clear();\n                    this.setState({ display: 'Infinity' });\n                    break;\n                }\n                // Divide by zero case\n                if (this.state.operand === '/' && this.state.num2 === '0') {\n                    this.clear();\n                    this.setState({ display: 'error:div by zero'});\n                    break;\n                }\n                // Records a boolean for if = was the last key pressed\n                this.setState({ eqPress: true });\n                // If neither num1 nor num2 have been defined yet, do nothing\n                if (this.state.num1 === '' && this.state.num2 === '') {\n                    break;\n                    // If num2 is undefined, calculate using num1 [operand] num1\n                } else if (this.state.num2 === '') {\n                    this.equalCalc(this.state.operand);\n                    break;\n                    // If num2 has been defined, record num2 in the equal sign's temp num holder, then calculate\n                } else {\n                    this.setState({\n                        equalTemp: this.state.num2,\n                        display: this.mathCalc(this.state.operand)\n                    });\n                    break;\n                }\n            case '.':\n                // If operand is undefined, then apply decimal to num1\n                if (this.state.operand === '') {\n                    // Check to make sure num1 doesn't already have a decimal\n                    if (!this.state.num1.includes('.')) {\n                        this.setState({\n                            num1: this.state.num1 + '.',\n                            display: this.state.num1 + '.',\n                        });\n                    }\n                } else {\n                    if (!this.state.num2.includes('.')) {\n                        this.setState({\n                            num2: this.state.num2 + '.',\n                            display: this.state.num2 + '.',\n                        });\n                    }\n                }\n                break;\n            // Clears the calc and all its variables if btn C is pressed\n            case 'C':\n                this.clear();\n        }\n    }\n\n    // Normal calculations --> [] + [] =\n    mathCalc(key) {\n        switch (key) {\n            case '+':\n                // Calculates num1 [operand] num2, stores that value \n                // in num1 and displays it, clears num2 for use in future calculations\n                var plus = Number(this.state.num1) + Number(this.state.num2);\n                this.setState({\n                    num1: plus,\n                    num2: '',\n                });\n                return plus;\n            case '-':\n                var minus = Number(this.state.num1) - Number(this.state.num2);\n                this.setState({\n                    num1: minus,\n                    num2: '',\n                });\n                return minus;\n            case '/':\n                var div = Number(this.state.num1) / Number(this.state.num2);\n                this.setState({\n                    num1: div,\n                    num2: '',\n                });\n                return div;\n            case '*':\n                var mult = Number(this.state.num1) * Number(this.state.num2);\n                this.setState({\n                    num1: mult,\n                    num2: '',\n                });\n                return mult;\n            default:\n                console.log('WARNING: Math Calc default case.');\n        }\n    }\n\n    // [] + [] + []... =\n    multiCalc(key) {\n        switch (key) {\n            case '+':\n                this.setState({\n                    num1: Number(this.state.num1) + Number(this.state.num2),\n                    num2: '',\n                    display: Number(this.state.num1) + Number(this.state.num2),\n                });\n                break;\n            case '-':\n                this.setState({\n                    num1: Number(this.state.num1) - Number(this.state.num2),\n                    num2: '',\n                    display: Number(this.state.num1) - Number(this.state.num2),\n                });\n                break;\n            case '/':\n                this.setState({\n                    num1: Number(this.state.num1) / Number(this.state.num2),\n                    num2: '',\n                    display: Number(this.state.num1) / Number(this.state.num2),\n                });\n                break;\n            case '*':\n                this.setState({\n                    num1: Number(this.state.num1) * Number(this.state.num2),\n                    num2: '',\n                    display: Number(this.state.num1) * Number(this.state.num2),\n                });\n                break;\n            default:\n                console.log('WARNING: Multi Calc default case');\n        }\n    }\n\n    // For when equal sign is pressed multiple times --> [] + = = = OR [] + [] = = =\n    equalCalc(key) {\n        var localTemp = this.state.equalTemp;\n        // If equal's temp num has not been defined yet, define it\n        // Otherwise, keep performing calculations using the old value\n        if (this.state.equalTemp === undefined) {\n            this.setState({ equalTemp: this.state.num1 });\n            localTemp = this.state.num1;\n        }\n        switch (key) {\n            case '+':\n                this.setState({\n                    num1: Number(this.state.num1) + Number(localTemp),\n                    num2: '',\n                    display: Number(this.state.num1) + Number(localTemp),\n                })\n                break;\n            case '-':\n                this.setState({\n                    num1: Number(this.state.num1) - Number(localTemp),\n                    num2: '',\n                    display: Number(this.state.num1) - Number(localTemp),\n                })\n                break;\n            case '/':\n                this.setState({\n                    num1: Number(this.state.num1) / Number(localTemp),\n                    num2: '',\n                    display: Number(this.state.num1) / Number(localTemp),\n                })\n                break;\n            case '*':\n                this.setState({\n                    num1: Number(this.state.num1) * Number(localTemp),\n                    num2: '',\n                    display: Number(this.state.num1) * Number(localTemp),\n                })\n                break;\n            case '':\n                return this.state.num1;\n            default:\n                console.log('WARNING: Equal Calc default case triggered.');\n        }\n    }\n\n    clear() {\n        this.setState({\n            num1: '',\n            num2: '',\n            operand: '',\n            equalTemp: undefined,\n            eqPress: false,\n            display: '0',\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div className='container bg-light rounded'>\n                    <div className='row'>\n                        <p id='displayWindow' className='col bg-light text-right display-4 rounded'>{this.state.display}</p>\n                    </div>\n                    <div className='row'>\n                        {this.calcBtns.map((val, idx) => {\n                            return <button key={val !== '' ? val : `blank${idx}`} onClick={this.userClick} type='button' className='col-3 border bg-light display-4 btn' disabled={val === ''}>{val}</button>\n                        })}\n                    </div>\n                </div>\n            </>\n\n        );\n    }\n}\n\nexport default Calculator4;\n\n// DEBUGGING LOGS\n// console.log(`Equation: ${this.state.num1} ->  ${this.state.operand} -> ${this.state.num2}`);\n// console.log(`Equal temp num: ${this.state.equalTemp}; eqPress: ${this.state.eqPress}`)\n// console.log('---------------');\n","import React, { useState, useEffect, useRef } from 'react';\n\nfunction ToDo() {\n    const view = useRef('all');\n    const list = useRef([]);\n    const [listHTML, setListHTML] = useState();\n\n    var input = '';\n    var inputRef = React.createRef();\n\n    class ListObj {\n        constructor(id, title, done) {\n            this.id = id;\n            this.title = title;\n            this.done = done;\n        }\n    }\n\n    useEffect(() => {\n        list.current.map((val, idx) => {\n            const x = document.getElementById(idx);\n            // Makes sure this doesn't trigger before the list loads\n            if (val.done && x) {\n                x.checked = true;\n            } else if (!val.done && x) {\n                x.checked = false;\n                x.nextSibling.className = 'custom-control-label';\n            }\n            return null;\n        });\n    }, [listHTML]);\n\n    useEffect(() => {\n        if (localStorage.length > 0) {\n            for (let i = 0; i < JSON.parse(window.localStorage.todoList).length; i++) {\n                let parsedJSON = JSON.parse(window.localStorage.todoList)[`${i}`];\n                list.current.push(new ListObj(i, parsedJSON.title, parsedJSON.done));\n            }\n            addToList();\n        }\n    }, []);\n\n    document.addEventListener('keydown', function (e) {\n        // 'Enter' key\n        if (e.keyCode === 13) {\n            // Removes space from left or right of input\n            if (input.trim() !== '') {\n                list.current.push(new ListObj(list.length, input, false));\n                localStorage.setItem(`todoList`, JSON.stringify(list.current));\n                // Clears the input box after 'enter'\n                input = '';\n                inputRef.value = '';\n                addToList();\n            }\n        }\n    });\n\n    function updateInput(e) {\n        input = e.target.value;\n    }\n\n    var listStyle = {\n        wordBreak: 'break-all',\n    };\n\n    function addToList() {\n        setListHTML(\n            <>\n                {list.current.map((val, idx) => {\n                    return (\n                        <div key={`groupKey_${idx}`} className='custom-control custom-checkbox ml-5' >\n                            <input key={`inputKey_${idx}`} onChange={strike} type='checkbox' className='custom-control-input' id={idx} />\n                            <label style={listStyle} key={`labelKey_${idx}`} className={val.done ? 'custom-control-label text-success' : 'custom-control-label'} htmlFor={idx}>{val.title}</label>\n                        </div>\n                    );\n                })}\n            </>\n        );\n    }\n\n    function viewDone() {\n        setListHTML(\n            <>\n                {list.current.map((val, idx) => {\n                    if (val.done) {\n                        return (\n                            <div key={`groupKey_${idx}`} className='custom-control custom-checkbox ml-5' >\n                                <input key={`inputKey_${idx}`} onChange={strike} type='checkbox' className='custom-control-input' id={idx} />\n                                <label key={`labelKey_${idx}`} className={val.done ? 'custom-control-label text-success' : 'custom-control-label'} htmlFor={idx}>{val.title}</label>\n                            </div>\n                        );\n                    }\n                    return null;\n                })}\n            </>\n        );\n    }\n\n    function viewAll() {\n        addToList();\n    }\n\n    function viewTodo() {\n        setListHTML(\n            <>\n                {list.current.map((val, idx) => {\n                    if (!val.done) {\n                        return (\n                            <div key={`groupKey_${idx}`} className='custom-control custom-checkbox ml-5' >\n                                <input key={`inputKey_${idx}`} onChange={strike} type='checkbox' className='custom-control-input' id={idx} />\n                                <label key={`labelKey_${idx}`} className={val.done ? 'custom-control-label text-success' : 'custom-control-label'} htmlFor={idx}>{val.title}</label>\n                            </div>\n                        );\n                    }\n                    return null;\n                })}\n            </>\n        );\n    }\n\n    function toggleAll() {\n        var anyChecked = true;\n        list.current.map((val) => {\n            if (!val.done) {\n                anyChecked = false;\n            }\n            return null;\n        });\n        list.current.map((val, idx) => {\n            if (val.done && anyChecked) {\n                document.getElementById(idx).click();\n            }\n            if (!val.done && !anyChecked) {\n                document.getElementById(idx).click();\n            }\n            return null;\n        });\n    }\n\n    function deleteItems() {\n        var temp = [];\n        list.current.map((val) => {\n            if (!val.done) {\n                temp.push(true);\n            } else {\n                temp.push(false);\n            }\n            return null;\n        });\n        var tempList = list.current;\n        list.current = [];\n        temp.map((val, idx) => {\n            if (val) {\n                list.current.push(tempList[idx]);\n            }\n            return null;\n        });\n        localStorage.setItem(`todoList`, JSON.stringify(list.current));\n        setListHTML(\n            <>\n                {list.current.map((val, idx) => {\n                    return (\n                        <div key={`groupKey_${idx}`} className='custom-control custom-checkbox ml-5' >\n                            <input key={`inputKey_${idx}`} onChange={strike} type='checkbox' className='custom-control-input' id={idx} />\n                            <label key={`labelKey_${idx}`} className={val.done ? 'custom-control-label text-success' : 'custom-control-label'} htmlFor={idx}>{val.title}</label>\n                        </div>\n                    );\n                })};\n            </>\n        );\n    }\n\n    function strike(e) {\n        if (e.target.checked) {\n            e.target.nextElementSibling.className = 'custom-control-label text-success';\n            list.current[e.target.id].done = true;\n            localStorage.setItem(`todoList`, JSON.stringify(list.current));\n        } else {\n            e.target.nextElementSibling.className = 'custom-control-label';\n            list.current[e.target.id].done = false;\n            localStorage.setItem(`todoList`, JSON.stringify(list.current));\n        }\n        changeView();;\n    }\n\n    function changeView() {\n        switch (view.current) {\n            case 'todo':\n                viewTodo();\n                break;\n            case 'done':\n                viewDone();\n                break;\n            default:\n                viewAll();\n        }\n    }\n\n    function showCount() {\n        // Loops through the array, counts the number of done and not-done items.\n        // Then sets the inner HTML of the view-state buttons to their respective\n        // count numbers. Is triggered on a mouseover event.\n        if (localStorage.length > 0) {\n            let doneNum = 0, notDoneNum = 0;\n            for (let i = 0; i < list.current.length; i++) {\n                list.current[i].done ? doneNum++ : notDoneNum++;\n            }\n            document.getElementById('viewDone').innerHTML = `${doneNum}`;\n            document.getElementById('viewAll').innerHTML = `${list.current.length}`;\n            document.getElementById('viewTodo').innerHTML = `${notDoneNum}`;\n        }\n    }\n\n    // Triggered on mouseout, returns view-state buttons to their original content\n    function hideCount() {\n        if (localStorage.length > 0) {\n            document.getElementById('viewDone').innerHTML = `&#10004;`;\n            document.getElementById('viewAll').innerHTML = `ALL`;\n            document.getElementById('viewTodo').innerHTML = `&#10006;`;\n        }\n    }\n\n    var sectionStyle = {\n        width: '80%',\n    };\n\n    return (\n        <>\n            <div className='container bg-info border rounded'>\n                <div className='row'>\n                    <h1 id='todoTitle' className='display-4 text-dark mt-2 mx-auto'>to-do</h1>\n                </div>\n                <div className='row'>\n                    <input id='todoInput' ref={el => inputRef = el} className='m-2 test-dark rounded mx-auto' style={sectionStyle} type='text' placeholder='What needs to get done?' onChange={updateInput} />\n                </div>\n                <div className='row text-left'>\n                    <div id='listRow'>\n                        {listHTML}\n                    </div>\n                </div>\n                <div className='row'>\n                    <div onMouseEnter={showCount} onMouseLeave={hideCount} className='btn-group pt-2 mx-auto' role='group' aria-label='Selection Buttons'>\n                        <button id='viewDone' onClick={() => { view.current = 'done'; changeView(); }} type='button' className='btn btn-success'>&#10004;</button>\n                        <button id='viewAll' onClick={() => { view.current = 'all'; changeView(); }} type='button' className='btn btn-secondary'>ALL</button>\n                        <button id='viewTodo' onClick={() => { view.current = 'todo'; changeView(); }} type='button' className='btn btn-danger'>&#10006;</button>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='btn-group p-2 mb-2 mx-auto' display='block' aria-label='Selection Buttons'>\n                        <button id='toggleAll' onClick={() => toggleAll()} type='button' className='btn btn-primary'><span role='img' aria-label='emoji'>&#128280;</span></button>\n                        <button id='delete' onClick={() => deleteItems()} type='button' className='btn btn-primary'><span role='img' aria-label='emoji'>&#128163;</span></button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ToDo;\n\n// TO FIX:\n// KEY and ID ON LIST WILL CAUSE PROBLEMS EVENTUALLY\n\n// TESTING LOGS:\n// // For testing --> Clears the local storage on key '='\n// if (e.keyCode === 187) {\n//     localStorage.clear();\n//     list.current = [];\n//     console.log(window.localStorage);\n// }\n// // For testing --> Displays some useful console.log()'s on '-' key\n// if (e.keyCode === 189) {\n//     console.log('----- Local Storage -----');\n//     console.log(JSON.parse(window.localStorage.todoList));\n//     console.log('----- My Code -----');\n//     console.log('List: ' + list.current);\n//     console.log('Input box: ' + input);\n//     console.log('View state: ' + view);\n// }\n","import React, { useState, useRef } from 'react';\n\nfunction MindReader2() {\n    const [text, setText] = useState('I can read your mind');\n    const [inst, setInst] = useState(<p className='text-primary mx-auto p-3'>Press go</p>);\n    const [nextReveal, setNextReveal] = useState('');\n    const [goReset, setGoReset] = useState('GO');\n\n    var pageNum = useRef(1);\n    var finalAns = useRef();\n\n    function symbols(num) {\n        let output = [];\n        let sym = [];\n        let symChar = ['=', '@', '*', '$', '%', '^', '&', '+', '#'];\n        for (let i = 0; i < 9; i++) {\n            let rand = (Math.floor(Math.random() * (9 - (9 - symChar.length))));\n            sym.push(symChar[rand]);\n            symChar.splice(rand, 1);;\n        }\n        for (let i = 0; i < num; i++) {\n            let num = i;\n            output.push(`${num} - ${sym[(i) % 9]}`)\n        }\n        return output;\n    }\n\n    const pageStyle = {\n        maxHeight: '250px',\n        fontSize: '40px',\n        overflow: 'scroll',\n    }\n\n    function nextPage() {\n        pageNum.current++;\n        renderPage();\n    }\n\n    function resetPage() {\n        if (pageNum.current === 1) {\n            pageNum.current++;\n        } else {\n            pageNum.current = 1;\n        }\n        renderPage();\n    }\n\n    function renderPage() {\n        switch (pageNum.current) {\n            case 1:\n                setText('I can read your mind');\n                setInst(<p className='text-primary mx-auto p-3'>Press go</p>);\n                setNextReveal('');\n                setGoReset('GO');\n                break;\n            case 2:\n                setText('Pick a number from 01-99');\n                setInst(<p className='text-primary mx-auto p-3'>When you have your number, click next</p>);\n                setNextReveal('NEXT');\n                setGoReset('RESET');\n                break;\n            case 3:\n                setText('Add both digits together to get a new number');\n                setInst(<p className='text-primary mx-auto p-3'>Ex: 25 is 2 + 5 = 7<br />Ex: 05 is 0 + 5 = 5<br />Click next to proceed</p>);\n                setNextReveal('NEXT');\n                setGoReset('RESET');\n                break;\n            case 4:\n                setText('Subtract your new number from your old number');\n                setInst(<p className='text-primary mx-auto p-3'>Ex: 25 - 07 = 18 <br />Ex: 05 - 05 = 0 <br />Click next to proceed</p>);\n                setNextReveal('NEXT');\n                setGoReset('RESET');\n                break;\n            case 5:\n                var output = symbols(100);\n                setText(output.map((val, idx) => {\n                    return (\n                        <div key={idx}>{val}</div>\n                    );\n                }));\n                setInst(<p className='text-primary mx-auto p-3'>Scroll to find the result of the previous equation.<br />Note the symbol beside the result.</p>);\n                setNextReveal('REVEAL');\n                finalAns.current = output[0][4];\n                setGoReset('RESET');\n                break;\n            case 6:\n                setText(`Your symbol is: ${finalAns.current}`);\n                setInst(<p className='text-primary mx-auto p-3'>Press reset to start over</p>);\n                setNextReveal('');\n                setGoReset('RESET');\n                break;\n            default:\n                return null;\n        }\n    }\n\n    return (\n        <>\n            <div className='container bg-light rounded'>\n                <div className='row'>\n                    <p style={pageStyle} id='text' className='text-center'>{text}</p>\n                </div>\n                <div className='row'>\n                    <button type='button' id='reset' onClick={resetPage} className='btn bg-primary mx-auto'>{goReset}</button>\n                </div>\n                <div className='row'>\n                    {inst}\n                </div>\n                <div className='row text-center'>\n                    <button type='button' id='next' onClick={nextPage} className='btn rounded-circle border p-3 mx-auto mb-3'>{nextReveal}</button>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default MindReader2;\n","import React from 'react';\nimport Clock from './DigitalClock';\nimport Countdown from './CountdownTimer';\nimport Weather from './Weather';\nimport Calculator4 from './Calculator4';\nimport ToDo from './ToDo.js';\nimport MindReader2 from './MindReader2';\nimport background from './background-1.jpg';\n\nfunction Layout() {\n    var sectionStyle = {\n        backgroundImage: `url(${background})`,\n        backgroundSize: '442px 1500px',\n        borderRadius: '10px',\n        backgroundRepeat: 'no-repeat',\n        width: '442px',\n        height: '1500px',\n        borderWidth: '3px',\n        borderStyle: 'solid',\n    };\n\n    return (\n        <>\n            {/* Gray background */}\n            <div className='container-fluid bg-dark'>\n                <div className='row'>\n                    <div className='col-0 col-sm-2 col-md-3 col-lg-4' />\n                    <div className='col-12 col-sm-8 col-md-6 col-lg-4 text-center'>\n                        <div className='p-1 py-3'>\n                            {/* section with background image */}\n                            <section style={sectionStyle} className=\"d-none d-sm-block\">\n                                <Clock />\n                                <Weather />\n                                <Countdown />\n                                <Calculator4 />\n                                <ToDo />\n                                <MindReader2 />\n                            </section>\n                            {/* Remove background on very small devices */}\n                            <section className=\"d-block d-sm-none\">\n                                <Clock />\n                                <Weather />\n                                <Countdown />\n                                <Calculator4 />\n                                <ToDo />\n                                <MindReader2 />\n                            </section>\n                        </div>\n                    </div>\n                    <div className='col-0 col-sm-2 col-md-3 col-lg-4' />\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Layout;\n\n// Background Photo by Carles Rabada on Unsplash\n// Carles -> https://unsplash.com/@carlesrgm?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\n// Unsplash -> https://unsplash.com/t/wallpapers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\n","import React from 'react';\nimport Layout from './Layout';\nimport './App.css';\n\n// Where I build the layout of the App\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // 'Content is cached for offline use.' message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background-1.935f36cf.jpg\";"],"sourceRoot":""}